plugins {
    id "com.android.library"
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-kapt"
    id 'kotlin-parcelize'
}

import java.nio.file.Paths
import java.nio.file.Files
import java.nio.charset.StandardCharsets

android {
    compileSdk env.compileSdk

    defaultConfig {
        minSdk env.minSdk
        targetSdk env.targetSdk

        testInstrumentationRunner env.testInstrumentationRunner
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    hilt {
        enableTransformForLocalTests = true
    }

    task PreBuild {
        gradle.taskGraph.addTaskExecutionListener(new TaskExecutionListener() {
            @Override
            void beforeExecute(Task task) {

            }

            @Override
            void afterExecute(Task task, TaskState taskState) {
                if("generateSafeArgsDebug" <=> task.name){
                    def builds = new File("${projectDir.path}/build/generated/source/navigation-args")
                    if(builds.exists()){
                        builds.eachFileRecurse(groovy.io.FileType.FILES) { file ->
                            if (file.name.matches('.*Directions\\.kt$')) {
                                def fPath = Paths.get(file.absolutePath)
                                List<String> lines = Files.readAllLines(fPath, StandardCharsets.UTF_8)
                                if(lines.size >= 2) {
                                    lines.set(2, "import com.otaku.kickassanime.R")
                                    Files.write(fPath, lines, StandardCharsets.UTF_8)
                                    println file.path
                                }
                            }
                        }
                    }
                }
            }
        })
    }
    namespace 'com.otaku.kickassanime'
}

ext.JWPlayerVersion = '4.6.0'
dependencies {
    implementation project(path: ":base")
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "com.google.android.material:material:$versions.material"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation "androidx.paging:paging-common:$versions.paging"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipe_refresh_layout"
    implementation "com.squareup.retrofit2:converter-gson:$versions.gson_conveter"
    implementation "com.mikepenz:iconics-core:5.3.4"
    implementation 'com.mikepenz:fontawesome-typeface:5.13.3.0-kotlin@aar'
    implementation "com.maxkeppeler.sheets:core:$versions.sheets"
    implementation "com.maxkeppeler.sheets:info:$versions.sheets"
    implementation "com.mikepenz:iconics-views:5.3.4"
    // paging
    implementation "androidx.paging:paging-runtime:$versions.paging"

    // OkHttp / Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation(platform('com.squareup.okhttp3:okhttp-bom:5.0.0-alpha.10'))

    implementation "org.threeten:threetenbp:$versions.threetenbp"
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    // Room
    implementation "androidx.room:room-ktx:$versions.room"
    implementation "androidx.room:room-common:$versions.room"
    implementation "androidx.room:room-paging:$versions.room"
    testImplementation project(path: ':base:cloudflarebypass')
    kapt "androidx.room:room-compiler:$versions.room"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0'

    /* tests dependencies */
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidx_junit"

    // okhttp
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.mock_okhttp_server"

    // hilt
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$versions.hilt"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hilt"

    androidTestImplementation("com.squareup.okhttp3:mockwebserver:5.0.0-alpha.7")


    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.1'

    implementation 'com.facebook.shimmer:shimmer:0.5.0'
}